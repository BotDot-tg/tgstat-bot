from datetime import timedelta

import pytz
from aiogram import types
from aiogram.dispatcher import FSMContext
from aiogram.dispatcher.filters import Text

from keyboards.inline.link_keyboard import link_kb
from keyboards.inline.menu_keyboard import pay, menu
from keyboards.inline.sub_pay import buy_subscribe, buy_requests
from loader import dp
from states.payment import Payment
from utils.db_api.db_commands import get_rate, start_subscribe, update_notify_sub, get_client, get_rate_by_id, \
    create_payment_db
from yoomoney_payment import create_payment


@dp.callback_query_handler(Text(equals='go_menu'))
async def go_menu(call: types.CallbackQuery):
    await call.message.edit_text(f'üëã –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é, {call.from_user.first_name}!\n\n'
                                 f'üïê –ö–∞–∂–¥—ã–π –¥–µ–Ω—å —è –ø–æ–º–æ–≥–∞—é –º–∞—Ä–∫–µ—Ç–æ–ª–æ–≥–∞–º –≤ –ø–æ–∏—Å–∫–µ —Ç–µ–ª–µ–≥—Ä–∞–º–º –∫–∞–Ω–∞–ª–æ–≤, —á—Ç–æ–±—ã –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∏—Ä–æ–≤–∞—Ç—å –Ω–µ–Ω—É–∂–Ω—ã–π —Ä—É—á–Ω–æ–π —Ç—Ä—É–¥ –∏ —Å—ç–∫–æ–Ω–æ–º–∏—Ç—å –≤—Ä–µ–º—è. –ê –≤—Ä–µ–º—è —Å–∞–º—ã–π –≥–ª–∞–≤–Ω—ã–π —Ä–µ—Å—É—Ä—Å!\n\n'
                                 f'‚úâÔ∏è <b>–ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–µ—Ä–≤–∏—Å –±–µ—Å–ø–ª–∞—Ç–Ω–æ, –Ω–æ —Ç–æ–ª—å–∫–æ 1 —Ä–∞–∑! (–≥–ª—É–±–∏–Ω–∞ —Å–±–æ—Ä–∞ –¥–∞–Ω–Ω—ã—Ö ‚Äì 30 –∫–∞–Ω–∞–ª–æ–≤)</b>\n\n'
                                 f'–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –±–æ—Ç–æ–º –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –∫–Ω–æ–ø–∫–∞–º–∏, –ø—Ä–∏–∫—Ä–µ–ø–ª–µ–Ω–Ω—ã–º–∏ –Ω–∏–∂–µ.',
                                 reply_markup=menu
                                 )


@dp.callback_query_handler(Text(equals='subscribe'))
async def show_rate(call: types.CallbackQuery):
    data = await get_rate()
    client = await get_client(telegram_id=call.from_user.id)
    if client.subscribe is False:
        keyboard = await buy_subscribe(
            rate_id_first=data[0].id,
            rate_id_second=data[1].id,
            rate_id_third=data[2].id,
            rate_id_forth=data[3].id
        )
        await call.message.edit_text(f'‚úÖ –¢–∞—Ä–∏—Ñ "{data[0].title}"\n\n'
                                     f'üóì {data[0].description}\n'
                                     f'üîë –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–ø—Ä–æ—Å–æ–≤: {data[0].amount}\n'
                                     f'üí≥ –¶–µ–Ω–∞: {data[0].price} RUB.\n\n\n'
                                     f'‚úÖ –¢–∞—Ä–∏—Ñ "{data[1].title}"\n\n'
                                     f'üóì {data[1].description}\n'
                                     f'üîë –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–ø—Ä–æ—Å–æ–≤: {data[1].amount}\n'
                                     f'üí≥ –¶–µ–Ω–∞: {data[1].price} RUB.\n\n\n'
                                     f'‚úÖ –¢–∞—Ä–∏—Ñ "{data[2].title}"\n\n'
                                     f'üóì {data[2].description}\n'
                                     f'üîë –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–ø—Ä–æ—Å–æ–≤: {data[2].amount}\n'
                                     f'üí≥ –¶–µ–Ω–∞: {data[2].price} RUB.\n\n\n'
                                     f'‚úÖ –¢–∞—Ä–∏—Ñ "{data[3].title}"\n\n'
                                     f'üóì {data[3].description}\n'
                                     f'üîë –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–ø—Ä–æ—Å–æ–≤: {data[3].amount}\n'
                                     f'üí≥ –¶–µ–Ω–∞: {data[3].price} RUB.\n\n\n'
                                     f'üë®‚Äçüíª –ß—Ç–æ–±—ã –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å –ø–æ–¥–ø—Å–∏–∫—É, –≤—ã–±–µ—Ä–∏—Ç–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–π —Ç–∞—Ä–∏—Ñ –Ω–∏–∂–µ:',
                                     reply_markup=keyboard)
    else:

        s_date = client.start_subscribe + timedelta(hours=3)
        e_date = client.end_subscribe + timedelta(hours=3)
        start_date = s_date.strftime('%H:%M - %d/%m/%Y')
        end_date = e_date.strftime('%H:%M - %d/%m/%Y')
        keyboard = await buy_requests()
        await call.message.edit_text('üë®‚Äçüíª –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –≤–∞—à–µ–π –ø–æ–¥–ø–∏—Å–∫–µ:\n\n'
                                     f'üîë –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ—Å—Ç–∞–≤—à–∏—Ö—Å—è –∑–∞–ø—Ä–æ—Å–æ–≤: {client.amount}\n'
                                     f'üìÜ –î–∞—Ç–∞ –Ω–∞—á–∞–ª–∞ –ø–æ–¥–ø–∏—Å–∫–∏: {start_date}\n'
                                     f'üìÜ –î–∞—Ç–∞ –æ–∫–æ–Ω—á–∞–Ω–∏—è –ø–æ–¥–ø–∏—Å–∫–∏: {end_date}\n\n'
                                     f'üìç –ü–æ–ª—É—á–µ–Ω–æ –ª–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ: {"–î–∞" if client.is_notificated is True else "–ù–µ—Ç"}\n\n'
                                     f'‚úÖ –í—ã –º–æ–∂–µ—Ç–µ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ –ø—Ä–∏–æ–±—Ä–µ—Å—Ç–∏ –∑–∞–ø—Ä–æ—Å—ã, –µ—Å–ª–∏ –≤–∞—à–∏ —É–∂–µ –∑–∞–∫–∞–Ω—á–∏–≤–∞—é—Ç—Å—è',
                                     reply_markup=keyboard)


@dp.callback_query_handler(Text(startswith='buy'))
async def get_payment(call: types.CallbackQuery):
    data = call.data.split('_')
    rate = await get_rate_by_id(data[1])
    await create_payment_db(call.from_user.id)
    link = await create_payment(
        amount=rate.price,
        telegram_id=call.from_user.id,
        rate_id=data[1]
    )
    keyboard = await link_kb(link)
    await call.message.edit_text('‚úÖ –ù–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É, —á—Ç–æ–±—ã –ø–µ—Ä–µ–π—Ç–∏ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É –æ–ø–ª–∞—Ç—ã.', reply_markup=keyboard)
